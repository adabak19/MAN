@page "/singleBook/{id:int}"
@using MAN.Shared.Interfaces;
@using MAN.Shared.DTO;
@inject IBookService BookService

<h3>Book Details</h3>

@if (book == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="single-book">
        <ul>
            <li><strong>ISBN:</strong> @(string.IsNullOrEmpty(book.ISBN) ? "Unknown" : book.ISBN)</li>
            <li><strong>Title:</strong> @book.Title</li>
            <li><strong>Author:</strong> @book.AuthorName</li>
            <li><strong>Publisher:</strong> @book.Publisher</li>
            <li><strong>Page Count:</strong> @book.PageCount</li>
            <li><strong>Year Published:</strong> @book.YearPublished</li>
            <li><strong>Amount:</strong> @book.Amount</li>
            <li><strong>Genres:</strong>
                <ul>
                    @foreach (var genre in book.Genres)
                    {
                        <li>@genre</li>
                    }
                </ul>
            </li>
            <li><strong>Co-Authors:</strong>
                <ul>
                    @foreach (var coauthor in book.CoAuthors)
                    {
                        <li>@coauthor</li>
                    }
                </ul>
            </li>
        </ul>
    </div>
}

@code {
    private BookDto? book;
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        book = await BookService.GetAsyncById(Id);
    }
}
