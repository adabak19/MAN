@page "/login"
@using MAN.Shared.DTO
@using MAN.Shared.Interfaces
@inject IAuthServiceWEB AuthService
@inject NavigationManager Navigation

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="profileName">Profile Name</label>
        <InputText id="profileName" class="form-control" @bind-Value="loginModel.ProfileName" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>
<button @onclick="Register">Register</button>

@code {
    private ProfileLoginDto loginModel = new ProfileLoginDto();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            await AuthService.LoginAsync(loginModel.ProfileName, loginModel.Password);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
    private async Task Register(){
        Navigation.NavigateTo($"/register");
    }
}