@page "/register"
@using MAN.Shared.Models
@using MAN.Shared.Interfaces
@inject IProfileService ProfileService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="register-container">
<h3>Register</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="profileName">Profile Name</label>
        <InputText id="profileName" class="form-control" @bind-Value="registerModel.ProfileName" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="confirmPassword" />
    </div>
    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="registerModel.FirstName" />
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="registerModel.LastName" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>
</div>

@code {
    private Profile registerModel = new Profile();
    private string confirmPassword;
    private string errorMessage;

    private async Task HandleRegister()
    {
        if (registerModel.Password != confirmPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }
        registerModel.Id = 10003;
        registerModel.Role = "User";
        registerModel.Active = true;
        registerModel.BookReads = null; 
        var result = await ProfileService.AddAsync(registerModel);
        if (result != null)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "Registration failed. Please try again.";
        }
    }
}